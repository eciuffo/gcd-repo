search
search()
install.packages("psych")
install.packages("psych")
library(psych)
search()
x=c(1,2,3,4,5,6)
y=c(5,6,7,8,9,10)
y
cbind(x,y)
rbind(x,y)
q()
search()
install.packages("psych")
lybrary(psych)
library(psych)
install.packages("sm")
library(sm)
search()
memory <- read.table("Stats1.13.HW.02.txt", header = T)
memory <- read.table("C:\Users\eciuffo\Princeton\Statistics 1\Labs\2\Stats1.13.HW.02.txt", header = T)
memory <- read.table("C:\Users\eciuffo\Princeton\Statistics 1\Labs\2\Stats1.13.HW.02.txt", header = T)
memory <- read.table("C:\Users\eciuffo\Princeton\"Statistics 1"\Labs\2\Stats1.13.HW.02.txt", header = T)
getwd()
memory <- read.table("Stats1.13.HW.02.txt", header = T)
posttest <- subset(memory, memory[, 3]=="post")
describeBy(posttest, posttest$condition)
pretest <- subset(memory, memory[, 3]=="pre")
pretest <- subset(memory, memory[, 3]=="pre")
WMpre <- subset(pretest, pretest[, 2]=="WM")
WMpost<- subset(posttest, posttest[, 2]=="WM")
PEpre <- subset(pretest, pretest[, 2]=="PE")
PEpost<- subset(posttest, posttest[, 2]=="PE")
DSpre <- subset(pretest, pretest[, 2]=="DS")
DSpost<- subset(posttest, posttest[, 2]=="DS")
par(mfrow = c(3,3)) # To view 6 histograms on one page
hist(WMpre[, 4], xlab = "WM pretest", main = "")
hist(WMpost[, 4], xlab = "WM posttest", main = "")
hist(PEpre[, 4], xlab = "PE pretest", main = "")
hist(PEpost[, 4], xlab = "PE posttest", main = "")
hist(DSpre[, 4], xlab = "DS pretest", main = "")
hist(DSpost[, 4], xlab = "DS posttest", main = "")
nrow(memory)
sd(memory$SR)^2
mean(pretest$SR)
sd(posttest$SR)
names(memory)
pre = subset(memory, memory$time=="pre") THEN mean(pre$SR)
pre = subset(memory, memory$time=="pre")
mean(pre$SR)
nrow(memory)
mean(memory)
mean(memory$SR)
sd(memory$SR)^2
mean(pretest$SR)
sd(posttest$SR)
median(posttest$SR)
describe(posttest$SR)
q()
5^5
5^2
8
v=c(1,2,3,4,5)
v
m=matrix(1:8,2,4)
m
?matrix
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
x=1:6
x
x=1:7
x
y=10:20
cbind(x,y)
rbind(x,y)
attributes(m)
view(m)
view(memory
)
view(mempry)
view(memory)
edit(memory)
q()
q()
q()
view(memory)
?view
load(psych)
library(psych)
view(memory)
q()
3 + 4
5 * 5
12 / 3
5^5
v=c(1,3,5,7)
v
l=c("Blue", 2, 5, "Red")
l
m=matrix(1:6,2,3)
m
m2=matrix(1:6)
m2
dim(m2)=c(2,3)
m2
x=1:6
y=5:10
cbind(x,y)
rbind(x,y)
attributes(m)
m
m[1,2]
d=data.frame(subjectID=1:5,gender=c("M","F","F","M","F"),score=c(8,3,6,5,5))
d
nrow(d)
d[2,1]
edit(d)
install.packages("psych")
library(psych)
search()
library(psych)
install.packages("psych")
?uninatall.packages
?uninatall.packages
remove.packages("psych")
install packages("psych")
install.packages("psych")
library(psych)
search()
getwd()
library(sm)
search()
impact <- read.table("stats1-datafiles-Stats1.13.Lab.02.txt", header = T)
getwd()
impact <- read.table("stats1-datafiles-Stats1.13.txt", header = T)
impact <- read.table("Stats1.13.HW.02.txt"), header = T)
impact <- read.table("Stats1.13.HW.02.txt", header = T)
impact
dim(impact)
edit(impact)
class(impact)
names(impact)
class(impact$verbal_memory_baseline)
class(impact$subject)
impact$subject <- factor(impact$subject)
class(impact$subject)
describe(impact)
q()
install.packages("knitr")
file.edit("~/.Rprofile")
options(rpubs.upload.method = "internal")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
ls()
rm(list=ls())
swirl()
read.csv(path2csv,stringsAsFactors = FALSE)
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?manip
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
select(cran)   |                                                                              |===============================                                       |  45%
| Use this knowledge to omit all columns X:size using select().
> select(cran, -(X:size))
Source: local data frame [225,468 x 7]
r_version r_arch      r_os      package version country ip_id
1      3.1.0 x86_64   mingw32    htmltools   0.2.4      US     1
2      3.1.0 x86_64   mingw32      tseries 0.10-32      US     2
3      3.1.0 x86_64 linux-gnu        party  1.0-15      US     3
4      3.1.0 x86_64 linux-gnu        Hmisc  3.14-4      US     3
5      3.0.2 x86_64 linux-gnu       digest   0.6.4      CA     4
6      3.1.0 x86_64 linux-gnu randomForest   4.6-7      US     3
7      3.1.0 x86_64 linux-gnu         plyr   1.8.1      US     3
8      3.0.2 x86_64 linux-gnu      whisker   0.3-2      US     5
9         NA     NA        NA         Rcpp  0.10.4      CN     6
10     3.0.2 x86_64 linux-gnu     hflights     0.1      US     7
..       ...    ...       ...          ...     ...     ...   ...
| You are amazing!
|                                                                              |=================================                                     |  47%
| Now that you know how to select a subset of columns using select(), a natural next question is "How
| do I select a subset of rows?" That's where the filter() function comes in.
bye
bye()
exit
q()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <-group_by(cran,package)
by_package
summarize(by_package,nean(time))
summarize(by_package,mean(time)
)
summarize(by_package,mean(size))
play()
?n_distinct()
nxt()
submit()
submit()
pack_sum
quantile(pack_sum$count, probs
= 0.99)
top_counts<-filter(pack_sum, count > 679)
top_count
top_count
top_counts
head(top_counts, 20)
arrange(top_counts,desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique<-filter(pack_sum, unique > 465)
top_unique
arrange(top_unique,desc(unique))
submit()
submit()
submit()
submit()
reset()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
reset()
submit()
play
head(cran)
nxt()
submit()
submit()
reset()
submit()
submit()
submit()
bye()
q()
q()
rm(list=ls())
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
swirl()
swirl()
swirl()
cran %>%
select(ip_id, country, package, size) %>%
mutate(size_mb = size / 2^20) %>%
print
cran %>%
select(ip_id, country, package, size) %>%
mutate(size_mb = size / 2^20) %>%
print
1
nxt()
cran %>%
select(ip_id, country, package, size) %>%
mutate(size_mb = size / 2^20) %>%
print
nxt()
submit()
submit()
submit()
submit()
skip()
submit()
submit()
submit()
submit()
submit()
skip()
submit()
skip()
library(tidyr)
students
?gather
gather(in order): students,sex,count, -grade
gather(students,sex,count, -grade)
students2
gathet(student2,sex_class, count)
gathet(student2,sex_class, count,  -grade)
gather(student2,sex_class, count,  -grade)
gather(students2,sex_class, count,  -grade)
res<-gather(students2,sex_class, count,  -grade)
res
?separate
separate(res,sex_class,c("sex", "class"))
submit()
submit()
student3
students3
submit()
submit()
reset()
submit()
bye()
swirl
swirl()
bye()
q()
q()
q()
library(knitr)
install.packages("knitr")
library(knitr)
pwd()
getwd{}
getwd()
setwd("C:\\Users\\eciuffo\\github\\jhopkins\\gcd\\Course Project")
getwd()
getwd()
